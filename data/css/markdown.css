/* main */

div {
    font-size: large;
    font-weight: 1000;
    font-family: "Inconsolanta", "MonoId", "Source Code Pro";
    color: ghostwhite;
    background-color: black;
}

h1 {
    font-size: 32;
    font-weight: 1000;
    font-family: "Inconsolanta", "MonoId", "Source Code Pro";
    color: ghostwhite;
    background-color: black;
}

h2 {
    font-size: 28;
    font-weight: 900;
    font-family: "Inconsolanta", "MonoId", "Source Code Pro";
    color: ghostwhite;
    background-color: black;
}

h3 {
    font-size: 24;
    font-weight: 800;
    font-family: "Inconsolanta", "MonoId", "Source Code Pro";
    color: ghostwhite;
    background-color: black;
}

h4 {
    font-size: 20;
    font-weight: 700;
    font-family: "Inconsolanta", "MonoId", "Source Code Pro";
    color: ghostwhite;
    background-color: black;
}

h5 {
    font-size: 16;
    font-weight: 600;
    font-family: "Inconsolanta", "MonoId", "Source Code Pro";
    color: ghostwhite;
    background-color: black;
}

h6 {
    font-size: 12;
    font-weight: 500;
    font-family: "Inconsolanta", "MonoId", "Source Code Pro";
    color: ghostwhite;
    background-color: black;
}

/* info */

/* selectors - customize particular elements:
 * using the name: element_name { propery: value; }
*/

/* .classes - customize element groups:
 * using the class name: .element_class { propery: value; }
 * using more class names: .element_class1.element_class2 { propery: value; }
*/

/* types - customize element types:
 * using the type name: element_type { property:value; } (like "div" or "p")
*/

/* #ids - customize id:
 * using the indentifier: #ID { propery:value; }
*/

/* [attributes]
 * using the attribute name:                                [attr]          { font-size: smaller; }
 * using the attribute value:                               [attr='value']  { font-size: smaller; }
 * using the attribute value starts with:                   [attr^='start'] { font-size: smaller; }
 * using the attribute value ends with:                     [attr$='end']   { font-size: smaller; }
 * using the attribute value from a space-separated list:   [attr~='list']  { font-size: smaller; }
 * using the attribute value from a dash-separated list:    [attr|='list']  { font-size: smaller; }
*/

/* combination.selector
 * using a type and a class name: type.class { ... }
*/

/* :events
 * selector:link { }
 * selector:visited { }
 * selector:focus { }
 * selector:hover { }
 * selector:first-child { }
 * selector:last-child { }
*/

/* properties: "values"
 * relative
 ** witdth: 100%;
 ** font-size: 1em; (multiplies of an element's original font-size)
 ** font-size: 1rem; (multiplies root element's font-size)
 ** font-size: 1vw; (multiplies of 1% of the viewport witdth)
 ** font-size: 1hw; (multiplies of 1% of the viewport height)
 * absolute
 ** witdth: 100px; (pixels)
 ** witdth: 1in; (inches)
 ** witdth: 10cm; (centimeters)
 ** witdth: 100mm; (millimeters)
 ** font-size: 16pt; (points)
 * colors
 ** color: name;
 ** color: transparent;
 ** color: #hex;
 ** color: #hexdec;
 ** color: rgb  (red-float,     green-float,                blue-float);
 ** color: hsl  (hue-float,     saturation-float,           lightness-float);
 ** color: rgb  (red-percent%,  blue-percent%,              blue-percent%);
 ** color: hsl  (hue-percent%,  saturation-percent%,        lightness-percent%);
 ** color: rgba (red-float,     green-float,                blue-float,         alpha-float);
 ** color: hsla (hue-float,     saturation-float,           lightness-float,    alpha-float);
 * borders
 ** border-width: relative/absolute;
 ** border-style: solid;
 ** border-color: color;
 ** border: size style color;
 ** border-radius: relative/absolute; (css3 stuff)
 * images
 ** background-image: url("path"/"url" or path/url)
 * fonts
 ** font-family: name;
 ** font-family: "name with spaces";
 ** font-family: "name with spaces", other_name, "one_more_name to search"
*/

/* endf */